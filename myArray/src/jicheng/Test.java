package jicheng;

/*
 继承  测试类

 继承的好处：
        提高代码复用性（可以使用父类的成员)
        提高代码维护性（如果方法代码需要修改，修改一处即可）
   弊端：
        增强了类的耦合性，父类变化时子类也会变化，削弱了子类的独立性

 什么时候使用继承：A是B的一种

===Zi
子类继承父类，可以使用父类中的属性和方法
  子类还可以有自己特有的内容

  访问继承的成员变量/成员方法：  //栈空间原理
        首先在子类方法内部找
        接下来去子类成员内找 this
        最后去父类成员内找 super
        不考虑父类的父类，都找不到时报错

  继承的构造方法：
        子类中所有构造方法默认都会访问父类中无参的构造方法。因为子类需要初始化父类中的数据。
        每个子类第一条语句默认是super()
        ---
        如果父类中没有无参构造方法，1.自己定义无参构造方法 2.使用super带参数 访问父类带参构造方法

===NewpPone
Java中类不支持多继承，支持多层继承

  子类中重写父类方法

  使用override注解，检查重写方法的正确性

  私有方法不能被重写

  子类访问权限不能低于父类 public > 默认 > private

 */
public class Test {
    public static void main(String[] args) {

        Zi z = new Zi();
        z.show();
        z.method();

    }
}
